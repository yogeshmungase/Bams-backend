openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for managing users, roles, and permissions in the AmdGIS Web Application.

paths:
  /users:
    get:
      summary: Get list of all users
      operationId: getUsers
      tags:
        - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user by ID
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user by ID
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully

  /roles:
    get:
      summary: Get list of all roles
      operationId: getRoles
      tags:
        - Roles
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
    post:
      summary: Create a new role
      operationId: createRole
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'

  /roles/{roleId}:
    get:
      summary: Get a role by ID
      operationId: getRoleById
      tags:
        - Roles
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    put:
      summary: Update a role by ID
      operationId: updateRole
      tags:
        - Roles
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Role updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      summary: Delete a role by ID
      operationId: deleteRole
      tags:
        - Roles
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Role deleted successfully

  /permissions:
    get:
      summary: Get list of all permissions
      operationId: getPermissions
      tags:
        - Permissions
      responses:
        '200':
          description: List of permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
    post:
      summary: Create a new permission
      operationId: createPermission
      tags:
        - Permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'

  /permissions/{permissionId}:
    get:
      summary: Get a permission by ID
      operationId: getPermissionById
      tags:
        - Permissions
      parameters:
        - name: permissionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Permission details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
    put:
      summary: Update a permission by ID
      operationId: updatePermission
      tags:
        - Permissions
      parameters:
        - name: permissionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
    delete:
      summary: Delete a permission by ID
      operationId: deletePermission
      tags:
        - Permissions
      parameters:
        - name: permissionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Permission deleted successfully

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        username:
          type: string
          example: "johndoe"
        password:
          type: string
          example: "password@123"
        email:
          type: string
          example: "johndoe@example.com"
        firstName:
          type: string
          example: "john"
        lastName:
          type: string
          example: "Dow"
        mobile:
          type: string
          example: "7878787788"
        center:
          type: string
          example: "Pune"
        status:
          type: string
          example: "7878787788"
        institutionId:
          type: string
          example: "4010"
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        createdBy:
          type: string
        updatedBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Role:
      type: object
      properties:
        id:
          type: string
          example: "67890"
        name:
          type: string
          example: "admin"
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Permission:
      type: object
      properties:
        id:
          type: string
          example: "54321"
        name:
          type: string
          example: "read"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
